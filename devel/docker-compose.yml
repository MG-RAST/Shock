
version: '3.1'


# *** required ***
# set DATADIR for persistent data store , e.g. /var/tmp/Shock


# optional
# set CONFIGDIR to path to config
# set LOGDIR to path to local log dir
volumes:
  dataIRODS-1:
  dataMINIO-1:
    driver: local

services:

    # the SHOCK object store
    # to make SHOCK data persistent uncomment the lines here and in "mongo" below
    shock:
        image: mgrast/shock
        depends_on:
          - shock-mongo
          - shock-minio
      #    - shock-irods
        entrypoint: 
          - /bin/sleep 
          - 999d 
          # docker exec -ti test_shock_1 /go/bin/shock-server --hosts=shock-mongo --basic=true --users=admin
        
          #- /go/bin/shock-server
          #- --hosts=shock-mongo
          # - --conf
          # - /shock-config/shock-server.cfg
        volumes:
          # persistent data
          #- ${DATADIR}/shock/data:/usr/local/shock
          
          # mount local source code
          - $HOME/go/src/github.com/MG-RAST/Shock:/go/src/github.com/MG-RAST/Shock
          # mount config dir in correct location
          - $HOME/go/src/github.com/MG-RAST/Shock/devel/config.d:/etc/shock.d
          # mount config file 
          #- ${CONFIGDIR}/Shock/shock-server.container.cfg:/shock-config/shock-server.cfg
          
          # mount log directory
          #   - ${LOGDIR}/shock:/var/log/shock
          
        ports:
          - 7445:7445
          
  
    # Minio to serve as local S3 backend
    shock-minio:
      image: minio/minio
      volumes:
         - dataMINIO-1:/data
      ports:
        - "9000:9000"
      environment:
        MINIO_ACCESS_KEY: minio
        MINIO_SECRET_KEY: minio123
      command: server  /data
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3

  #  # Minio to serve as local S3 backend
  #   shock-irods:
  #     image: irods/icat:4.0.3
  #     volumes:
  #       - dataIRODS-1:/data
  #     ports:
  #       - "1247:1247"
  #     # start irods with admin password
  #     command: ["/opt/irods/bootstrap.sh", "irods123"]
      

    # mongoDB for the SHOCK service, provides metadata storage
    shock-mongo:
        image: mongo:3.6
        ports:
          - 27017
        #volumes:
          # persistent data
          #- ${DATADIR}/mongo/db:/data/db

    # create admin account
    shock-mongo-seed:
        image: mongo:3.6
        depends_on:
          - shock-mongo
        entrypoint: >
          /bin/bash -c "
            set -x
            until mongo mongodb://shock-mongo:27017/ShockDB  --eval version 
            do
              echo sleeping;
              sleep 1;
            done;
            echo Connected!;
            mongo mongodb://shock-mongo:27017/ShockDB --eval 'db.Users.updateOne({username: \"admin\"}, {$$set: { password: \"secret\" , shock_admin: true } } )';
            mongo mongodb://shock-mongo:27017/ShockDB --eval 'db.Users.updateOne({username: \"user1\"}, {$$set: { password: \"secret\" , shock_admin: false } } )';
          "

# create admin user manually           
#
# docker exec -ti test_shock-mongo_1 mongo ShockDB --eval 'db.Users.insert({username: "admin",  password: "secret" , shock_admin: true }  )';
         

# curl -H 'Authorization: basic dXNlcjE6c2VjcmV0'  <shock-api>/node...   # this is   user1:secret 
# curl -H 'Authorization: basic YWRtaW46c2VjcmV0'  <shock-api>/node...   # this is   admin:secret 

