
version: '3.1'

# hint: uses .env file


# optional
# set DATADIR for persistent data store , e.g. /var/tmp/Shock
# set CONFIGDIR to path to config
# set LOGDIR to path to local log dir

services:

    # the SHOCK object store
    # to make SHOCK data persistent uncomment the lines here and in "mongo" below
    shock:
        image: mgrast/shock
        depends_on:
          - shock-mongo
          - shock-mongo-seed
        entrypoint: 
          - /go/bin/shock-server 
          - --conf=/go/src/github.com/MG-RAST/Shock/test/config.d/shock-server.conf  
          
        ports:
          - 7445:7445
          
  
  

    # mongoDB for the SHOCK service, provides metadata storage
    shock-mongo:
        image: mongo:3.6
        ports:
          - 27017
        #volumes:
          # persistent data
          #- ${DATADIR}/mongo/db:/data/db

    # create admin account
    shock-mongo-seed:
        image: mongo:3.6
        depends_on:
          - shock-mongo
        entrypoint: >
          /bin/bash -c "
            set -x
            until mongo mongodb://shock-mongo:27017/ShockDB  --eval version 
            do
              echo sleeping;
              sleep 1;
            done;
            echo Connected!;
            mongo mongodb://shock-mongo:27017/ShockDB --eval 'db.Users.updateOne({username: \"admin\"}, {$$setOnInsert: { uuid: UUID(), password: \"secret\" , shock_admin: true } } , {upsert : true})';
            mongo mongodb://shock-mongo:27017/ShockDB --eval 'db.Users.updateOne({username: \"user1\"}, {$$setOnInsert: { uuid: UUID(), password: \"secret\" , shock_admin: false } } , {upsert : true})';
          "


# create admin user manually           
#
# docker exec -ti test_shock-mongo_1 mongo ShockDB --eval 'db.Users.insert({username: "admin",  password: "secret" , shock_admin: true }  )';
         

# curl -H 'Authorization: basic dXNlcjE6c2VjcmV0'  <shock-api>/node...   # this is   user1:secret 
# curl -H 'Authorization: basic YWRtaW46c2VjcmV0'  <shock-api>/node...   # this is   admin:secret 

